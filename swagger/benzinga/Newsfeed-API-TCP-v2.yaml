swagger: '2.0'
info:
  title: Benzinga TCP
  description: |
    The Benzinga TCP Service

    ### Line Endings
    All line endings will be in the expected format:
    ```
    =BZEOT\r\n
    ```

    ### Commands

    All commands that returns or send data will include a colon (:) and possible whitespace ( )
    between the command and the data.

    **NOTE:** A single whitespace was required and will now be deprecated.
    
    ### Connection

    All clients are given a username and key to connect with. Only one connection is allowed from
    a username/key at any given time.

    Once connected, the server will reply with READY

    On READY, send an AUTH token in the form

    ```
    AUTH: JSON Object {
      username: username
      key: 1234567890
    }
    ```

    The server will reply CONNECTED, if the connection is valid, otherwise disconnect.

    #### example
    ```
    SERVER> READY=BZEOT\r\n
    CLIENT> AUTH: {"username": "username", "key": "1234567890"}=BZEOT\r\n
    SERVER> CONNECTED=BZEOT\r\n
    ```

    #### No Authentication Received
    Clients will receive the following disconnect message if no authentication message is received:

    ```
    Goodbye=BZEOT
    ```

    #### Failed Authentication

    Clients failing authentication would receive the following message(s)

    ```
    INVALID KEY=BZEOT
    INVALID KEY FORMAT=BZEOT
    ```
    
    ### Multiple Connections
    If multiples connections are needed in your environment, please contact us. Multiple

    Connection with the Same Username/Key will result in a disconnect:

    ```
    DUPLICATE CONNECTION=BZEOT
    ```
    
    ### Keep Alive
    Client Initiated:
    After successful connection, a client should send a keep alive by sending PING: along with the
    pingTime in JSON format. The pingTime will be returned in the response by the server, along
    with the server time in UTC. The pingTime may be in any string or numeric format and in only
    used as the response token.
    
    #### example:

    ```
    CLIENT> PING: {"pingTime": "VALUE"}=BZEOT\r\n
    SERVER> PONG: {"serverTime":"Thu Sep 20 2012 01:02:51 GMT+0000 (UTC)","pingTime":"VALUE"}=BZEOT\r\n
    ```

    **NOTE:** The swagger definition uses ws as the schema, however, this model is low-level.

  version: "1.1.0"
schemes:
  - ws
paths:
  /:
    get:
      responses:
        304:
          description: Success
definitions:
  AUTH:
    type: object
    properties:
      username:
        type: string
        description: The username for the account provided by Benzinga
      key:
        type: string
        description: The key for the username provided by Benzinga
  STREAM:
    type: object
    description: The STREAM model when used without Extended Tickers
    properties:
      id:
        type: number
        format: integer
        description: Primary Key and Unique ID of the Story
      title:
        type: string
        description: Title of the Article. Max 255 characters.
      body:
        type: string
        description: Body of the Article. The length may be limited, per client setup. Body format may be in HTML or RichText per client setup.
      status:
        type: string
        format: Published | Removed
        description: |
          This is the status of an article. A status of either “Published” or “Removed” will be 
          included with the article. Article updates would only be indicated through a pushed and a client
          checking the difference in updated times.
      published:
        type: string
        description: This is the published date of the article. Date will be in GMT.
        format: Thu Aug 09 2012 19:41:09 GMT+0000 (UTC)
      updated:
        type: string
        description: |
          This the updated timestamp of the article. This may be updated for a number of
          reasons that may or may not be apparent to the client. Stories will be pushed on all updates.
          Date will be in GMT.
        format: Thu Aug 09 2012 19:41:09 GMT+0000 (UTC)
      link:
        type: string
        description: Link to publicly available story on Benzinga.com. This field will indicate NULL if a link is not available
      channels:
        type: array
        description: The Benzinga Channels or categories an article appears in. This array may be blank if no channels exist.
        items:
          type: string
      tickers:
        type: array
        items:
          type: string
  STREAM (Extended Tickers):
    type: object
    description: The STREAM model when used with Extended Tickers
    properties:
      id:
        type: number
        format: integer
        description: Primary Key and Unique ID of the Story
      title:
        type: string
        description: Title of the Article. Max 255 characters.
      body:
        type: string
        description: Body of the Article. The length may be limited, per client setup. Body format may be in HTML or RichText per client setup.
      status:
        type: string
        format: Published | Removed
        description: |
          This is the status of an article. A status of either “Published” or “Removed” will be 
          included with the article. Article updates would only be indicated through a pushed and a client
          checking the difference in updated times.
      published:
        type: string
        description: This is the published date of the article. Date will be in GMT.
        format: Thu Aug 09 2012 19:41:09 GMT+0000 (UTC)
      updated:
        type: string
        description: |
          This the updated timestamp of the article. This may be updated for a number of
          reasons that may or may not be apparent to the client. Stories will be pushed on all updates.
          Date will be in GMT.
        format: Thu Aug 09 2012 19:41:09 GMT+0000 (UTC)
      link:
        type: string
        description: Link to publicly available story on Benzinga.com. This field will indicate NULL if a link is not available
      channels:
        type: array
        description: The Benzinga Channels or categories an article appears in. This array may be blank if no channels exist.
        items:
          type: string
      tickers:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            primary:
              type: number
              format: integer
            sentiment:
              type: string
  PING:
    type: object
    properties:
      pingTime:
        type: string
        description: A value defined by the client
  PONG:
    type: object
    properties:
      serverTime:
        type: string
        format: Thu Sep 20 2012 01:02:51 GMT+0000 (UTC)
      pingTime:
        type: string
        description: The value sent from the PING request.
